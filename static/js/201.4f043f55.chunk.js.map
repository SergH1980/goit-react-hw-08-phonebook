{"version":3,"file":"static/js/201.4f043f55.chunk.js","mappings":"uQAQaA,EAAqBC,EAAAA,GAAAA,GAAH,+CAIlBC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,iSAWJG,EAAYH,EAAAA,GAAAA,MAAH,oEAKTI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,sGAOLM,EAAeN,EAAAA,GAAAA,OAAH,2eA2BZO,GAAeP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,uC,SC9CnBS,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAHG,kCAINC,MAAON,EAAAA,KACJG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAHI,kCAIPE,SAAUP,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAHO,oCAMG,SAASG,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,SAACrB,EAAD,UAAoB,6CAGpB,SAAC,KAAD,CACEsB,cAAe,CAAET,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDK,iBAAkBb,EAClBc,SAAU,SAACC,EAAD,GAAwC,IAAjBC,EAAgB,EAAhBA,UAC/BN,GACEO,EAAAA,EAAAA,IAAS,CACPd,KAAMY,EAAmBZ,KACzBI,MAAOQ,EAAmBR,MAC1BC,SAAUO,EAAmBP,YAGjCQ,GACD,EAZH,UAcE,UAACxB,EAAD,YACE,SAACE,EAAD,CAAWwB,QAAQ,OAAnB,SAA0B,UAC1B,SAACvB,EAAD,CACEQ,KAAK,OAELgB,MAAM,yIACNb,UAAQ,KAEV,SAACR,EAAD,CAAcK,KAAK,OAAOiB,UAAU,SACpC,SAAC1B,EAAD,CAAWwB,QAAQ,QAAnB,SAA2B,YAC3B,SAACvB,EAAD,CACE0B,KAAK,QACLlB,KAAK,QAELgB,MAAM,yIACNb,UAAQ,KAEV,SAACR,EAAD,CAAcK,KAAK,QAAQiB,UAAU,SACrC,SAAC1B,EAAD,CAAWwB,QAAQ,WAAnB,SAA8B,cAC9B,SAACvB,EAAD,CACE0B,KAAK,WACLlB,KAAK,WAELgB,MAAM,+FACNb,UAAQ,KAEV,SAACR,EAAD,CAAcK,KAAK,WAAWiB,UAAU,SACxC,SAACvB,EAAD,CAAcM,KAAK,SAASkB,KAAK,SAAjC,SACwE,oBAOjF,CCtFc,SAASC,IACtB,OAAO,SAACb,EAAD,GACR,C","sources":["components/RegistrationForm/RegistrationForm.styled.jsx","components/RegistrationForm/RegistrationForm.jsx","pages/Registration/Registration.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  Form as FormStyle,\n  Field as FieldStyle,\n  ErrorMessage as ErrorMessageStyle,\n} from 'formik';\n\nexport const RegisterFormHeader = styled.h2`\n  text-align: center;\n`;\n\nexport const Form = styled(FormStyle)`\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  padding: 20px 30px;\n`;\n\nexport const FormLabel = styled.label`\n  font-weight: 500;\n  margin-bottom: 5px;\n`;\n\nexport const Field = styled(FieldStyle)`\n  width: 100%;\n  margin-bottom: 2px;\n  height: 30px;\n  line-height: 30px;\n`;\n\nexport const SubmitButton = styled.button`\n  max-width: 120px;\n  margin-top: 15px;\n  padding: 5px 10px;\n\n  border: none;\n  border-radius: 8px;\n\n  background-color: #1f86cf;\n  color: white;\n\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n  transition-duration: 300ms;\n  transition-property: background-color, color;\n  cursor: pointer;\n\n  :hover {\n    background-color: #d7b7e4;\n    color: black;\n  }\n\n  :active {\n    color: black;\n  }\n`;\n\nexport const ErrorMessage = styled(ErrorMessageStyle)`\n  color: red;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/authOperations';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Form,\n  FormLabel,\n  Field,\n  SubmitButton,\n  ErrorMessage,\n  RegisterFormHeader,\n} from './RegistrationForm.styled';\n\nconst SignupSchem = Yup.object().shape({\n  name: Yup.string()\n    .min(3, 'Too Short!')\n    .max(40, 'Too long!')\n    .required(`Please enter valid information`),\n  email: Yup.string()\n    .min(3, 'Too Short!')\n    .max(40, 'Too long!')\n    .required(`Please enter valid information`),\n  password: Yup.string()\n    .min(6, 'Too Short!')\n    .max(30, 'Too long!')\n    .required(`Please enter valid information`),\n});\n\nexport default function RegistrationForm() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <RegisterFormHeader>\n        To register, please fill out this form:\n      </RegisterFormHeader>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={SignupSchem}\n        onSubmit={(registrationValues, { resetForm }) => {\n          dispatch(\n            register({\n              name: registrationValues.name,\n              email: registrationValues.email,\n              password: registrationValues.password,\n            })\n          );\n          resetForm();\n        }}\n      >\n        <Form>\n          <FormLabel htmlFor=\"name\">Name</FormLabel>\n          <Field\n            name=\"name\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"name\" component=\"div\" />\n          <FormLabel htmlFor=\"email\">E-mail</FormLabel>\n          <Field\n            type=\"email\"\n            name=\"email\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"email\" component=\"div\" />\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\n          <Field\n            type=\"password\"\n            name=\"password\"\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage name=\"password\" component=\"div\" />\n          <SubmitButton name=\"submit\" type=\"submit\">\n            {/* {operation === 'add' && !error ? `Loading...` : `Add contact`} */}\n            Register\n          </SubmitButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","import RegistrationForm from 'components/RegistrationForm/RegistrationForm';\n\nexport default function Registration() {\n  return <RegistrationForm />;\n}\n"],"names":["RegisterFormHeader","styled","Form","FormStyle","FormLabel","Field","FieldStyle","SubmitButton","ErrorMessage","ErrorMessageStyle","SignupSchem","Yup","shape","name","min","max","required","email","password","RegistrationForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","registrationValues","resetForm","register","htmlFor","title","component","type","Registration"],"sourceRoot":""}