{"version":3,"file":"static/js/539.0b34d092.chunk.js","mappings":"uQAQaA,EAAkBC,EAAAA,GAAAA,GAAH,+CAIfC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,iSAWJG,EAAYH,EAAAA,GAAAA,MAAH,oEAKTI,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAH,sGAOLM,EAAeN,EAAAA,GAAAA,OAAH,2eA2BZO,GAAeP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAH,uC,SC9BnBS,EAAcC,EAAAA,KAAaC,MAAM,CACrCC,MAAOF,EAAAA,KACJG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAHI,kCAIPC,SAAUN,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAHO,oCAMG,SAASE,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,SAACpB,EAAD,UAAiB,6CACjB,SAAC,KAAD,CACEqB,cAAe,CAAER,MAAO,GAAII,SAAU,IACtCK,iBAAkBZ,EAClBa,SAAU,SAACC,EAAD,GAAiC,IAAjBC,EAAgB,EAAhBA,UACxBN,GACEO,EAAAA,EAAAA,IAAM,CACJb,MAAOW,EAAYX,MACnBI,SAAUO,EAAYP,YAG1BQ,GASD,EAnBH,UAqBE,UAACvB,EAAD,YACE,SAACE,EAAD,CAAWuB,QAAQ,QAAnB,SAA2B,YAC3B,SAACtB,EAAD,CACEuB,KAAK,QACLC,KAAK,QAELC,MAAM,yIACNd,UAAQ,KAEV,SAACR,EAAD,CAAcqB,KAAK,QAAQE,UAAU,SACrC,SAAC3B,EAAD,CAAWuB,QAAQ,WAAnB,SAA8B,cAC9B,SAACtB,EAAD,CACEuB,KAAK,WACLC,KAAK,WAELC,MAAM,+FACNd,UAAQ,KAEV,SAACR,EAAD,CAAcqB,KAAK,WAAWE,UAAU,SACxC,SAACxB,EAAD,CAAcsB,KAAK,SAASD,KAAK,SAAjC,SACwE,iBAOjF,CC/Fc,SAASI,IACtB,OAAO,SAACd,EAAD,GACR,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  Form as FormStyle,\n  Field as FieldStyle,\n  ErrorMessage as ErrorMessageStyle,\n} from 'formik';\n\nexport const LoginFormHeader = styled.h2`\n  text-align: center;\n`;\n\nexport const Form = styled(FormStyle)`\n  width: 600px;\n  display: flex;\n  flex-direction: column;\n  border-radius: 8px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\n  padding: 20px 30px;\n`;\n\nexport const FormLabel = styled.label`\n  font-weight: 500;\n  margin-bottom: 5px;\n`;\n\nexport const Field = styled(FieldStyle)`\n  width: 100%;\n  margin-bottom: 2px;\n  height: 30px;\n  line-height: 30px;\n`;\n\nexport const SubmitButton = styled.button`\n  max-width: 120px;\n  margin-top: 15px;\n  padding: 5px 10px;\n\n  border: none;\n  border-radius: 8px;\n\n  background-color: #1f86cf;\n  color: white;\n\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n  transition-duration: 300ms;\n  transition-property: background-color, color;\n  cursor: pointer;\n\n  :hover {\n    background-color: #d7b7e4;\n    color: black;\n  }\n\n  :active {\n    color: black;\n  }\n`;\n\nexport const ErrorMessage = styled(ErrorMessageStyle)`\n  color: red;\n`;\n","import React from 'react';\n// import { toast } from 'react-toastify';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/authOperations';\n\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  Form,\n  FormLabel,\n  Field,\n  SubmitButton,\n  ErrorMessage,\n  LoginFormHeader,\n} from './LoginForm.styled';\n\n// const toastSettings = {\n//   position: 'top-center',\n//   autoClose: 2000,\n//   hideProgressBar: false,\n//   closeOnClick: true,\n//   pauseOnHover: true,\n//   draggable: true,\n//   progress: undefined,\n//   theme: 'light',\n// };\n\n// function notifySameName(data) {\n//   toast.warn(`${data} is already in contacts`, toastSettings);\n// }\n\nconst SignupSchem = Yup.object().shape({\n  email: Yup.string()\n    .min(3, 'Too Short!')\n    .max(40, 'Too long!')\n    .required(`Please enter valid information`),\n  password: Yup.string()\n    .min(6, 'Too Short!')\n    .max(30, 'Too long!')\n    .required(`Please enter valid information`),\n});\n\nexport default function LoginForm() {\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <LoginFormHeader>Please enter valid credetials to login:</LoginFormHeader>\n      <Formik\n        initialValues={{ email: '', password: '' }}\n        validationSchema={SignupSchem}\n        onSubmit={(loginValues, { resetForm }) => {\n          dispatch(\n            logIn({\n              email: loginValues.email,\n              password: loginValues.password,\n            })\n          );\n          resetForm();\n          //   const toCompareName = contact => {\n          //     return contact.name === values.name;\n          //   };\n          //   if (!contactList.some(toCompareName)) {\n          //     dispatch(addContact(values));\n          //     return resetForm();\n          //   }\n          // notifySameName(values.name);\n        }}\n      >\n        <Form>\n          <FormLabel htmlFor=\"email\">E-mail</FormLabel>\n          <Field\n            type=\"email\"\n            name=\"email\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErrorMessage name=\"email\" component=\"div\" />\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\n          <Field\n            type=\"password\"\n            name=\"password\"\n            // pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage name=\"password\" component=\"div\" />\n          <SubmitButton name=\"submit\" type=\"submit\">\n            {/* {operation === 'add' && !error ? `Loading...` : `Add contact`} */}\n            Login\n          </SubmitButton>\n        </Form>\n      </Formik>\n    </div>\n  );\n}\n","import LoginForm from 'components/LoginForm/LoginForm';\n\nexport default function Login() {\n  return <LoginForm />;\n}\n"],"names":["LoginFormHeader","styled","Form","FormStyle","FormLabel","Field","FieldStyle","SubmitButton","ErrorMessage","ErrorMessageStyle","SignupSchem","Yup","shape","email","min","max","required","password","LoginForm","dispatch","useDispatch","initialValues","validationSchema","onSubmit","loginValues","resetForm","logIn","htmlFor","type","name","title","component","Login"],"sourceRoot":""}